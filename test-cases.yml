---
- summary: |
    Регистрация пользователя
  requirement: |
    При вводе корректных данных пользователь должен зарегистрирвоаться в приложении
  prerequisites: |
    Открыта страница регистрации. https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    Тестовые данные
    Nickname = username Email = каждый раз берём новый Password = password 
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь зарегистрирован и попал на главную страницу

- summary: |
    Неуспешная регистрация пользователя с некорректными данными
  requirement: |
    При вводе некорректных данных пользователь должен увидеть ошибку ввода данных
  prerequisites: |
    Открыта страница регистрации. https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    Тестовые данные
    Nickname = a Email = ilona@mail Password = pass
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Повторяем Password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь видит ошибку "Should be from 3 to 16 characters" под полем "Nickname", "Invalid email" под полем "Email" и "Should be from 6 to 16 characters" под полем "Password" 

- summary: |
    Проверка входа пользователя с несуществующим логином
  requirement: |
    При неправильном логине или пароле пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта страница логина. https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    Email = login@mail Password = goodpassword
  steps:
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь видит ошибку "Invalid email"

- summary: |
    Проверка входа пользователя с несуществующим паролем
  requirement: |
    При неправильном логине или пароле пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта страница логина. https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    Email = login@mail.ru Password = badpass
  steps:
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь видит ошибку "INVALID_PASSWORD"    

- summary: |
    Проверка входа пользователя с существующими логином и паролем
  requirement: |
    При правильном логине или пароле пользователь должен попасть на главную страницу
  prerequisites:
    Открыта страница логина. https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    Email = login@mail.ru Password = goodpass
  steps:
    - Вводим Email
    - Вводим Password
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Создание игры против бота
  requirement: |
    При выборе параметров игры против бота должна создаться игра
  prerequisites:
    Пользователь зашёл в систему, открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Нажимаем кнопку «CREATE A GAME»
    - Выбираем уровень сложности
    - Нажимаем кнопку «With a bot»
    - Устанавливаем время игры
    - Выбираем задание на игру или оставляем random task
    - Нажимаем кнопку «Create a battle»
  expected-result: |
    Пользователь должен попасть на страницу с игровым заданием

- summary: |
    Проверка победы над ботом
  requirement: |
    При вводе верного ответа на задание в игре против бота пользователь должен увидеть уведомление о победе
  prerequisites:
    Пользователь зашёл в систему, открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Нажимаем кнопку «CREATE A GAME»
    - Выбираем уровень сложности
    - Нажимаем кнопку «With a bot»
    - Устанавливаем время игры
    - Выбираем задание на игру "rect_area"
    - Нажимаем кнопку «Create a battle»
    - выбираем язык Node.js
    - Решаем задачу раньше бота с помощью следующего кода 
      #const _ = require("lodash"); 
      #const R = require("rambda"); 
      #const solution = (width, length) => { return width * length; }; 
      #module.exports = solution;
    - Нажимаем на зелёную кнопку "Run"
  expected-result: |
    Пользователь должен видеть уведомление о победе

- summary: |
    Проверка поражения в игре с ботом
  requirement: |
    При поражении в игре с ботом пользователь должен увидеть уведомление о поражении
  prerequisites:
    Пользователь зашёл в систему, открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Нажимаем кнопку «CREATE A GAME»
    - Выбираем уровень сложности
    - Нажимаем кнопку «With a bot»
    - Устанавливаем время игры
    - Выбираем задание на игру или оставляем random task
    - Нажимаем кнопку «Create a battle»
    - Ждём когда бот решит задачу раньше
  expected-result: |
    Пользователь должен видеть уведомление о поражении

- summary: |
    Проверка истёкшего времени игры
  requirement: |
    По истечении времени должно появиться уведомление об истёкшем времени и о том, что в игре нет победителей
  prerequisites:
    Пользователь зашёл в систему, открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Нажимаем кнопку «CREATE A GAME»
    - Выбираем уровень сложности
    - Нажимаем кнопку «With a bot»
    - Устанавливаем минимальное время игры, чтобы бот не успел решить задачу
    - Выбираем задание на игру или оставляем random task
    - Нажимаем кнопку «Create a battle»
    - Ждём когда время выйдет
  expected-result: |
    Пользователь должен видеть уведомление об истёкшем времени и о том, что в игре нет победителей

- summary: |
    Проверка создания игры с реальным человеком
  requirement: |
    Должна создаться игра с реальным человеком при выборе нужных параметров
  prerequisites:
    Пользователь зашёл в систему, открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Нажимаем кнопку «CREATE A GAME»
    - Выбираем уровень сложности
    - Нажимаем кнопку «With other users»
    - Устанавливаем время игры
    - Выбираем задание на игру "rect_area"
    - Нажимаем кнопку «Create a battle»
  expected-result: |
    Создалась игра, которую может принять любой желающий игрок

- summary: |
    Проверка присоединения к игре реального человека
  requirement: |
    При присоединении к игре реального человека должна начаться созданная ранее игра
  prerequisites:
    Пользователь зашёл в систему, открыта главная страница, на которой уже создана игра с реальным человеком. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Ждём, когда нашу игру примет реальный человек
    - Игру принимает человек и перед нами открывается игровое окно для решения задачи
  expected-result: |
    Пользователь видит игровое окно для решения задачи против реального человека

- summary: |
    Проверка победы над реальным человеком
  requirement: |
    При вводе верного ответа на задание в игре против реального человека пользователь должен увидеть уведомление о победе
  prerequisites:
    Пользователь зашёл в систему, открыта страница для решения задачи против реального человека.
  test-data: |
    empty
  steps:
    - Выбираем язык "Node.js"
    - Решаем задачу раньше оппонента с помощью следующего кода
      #const _ = require("lodash"); 
      #const R = require("rambda"); 
      #const solution = (width, length) => { return width * length; }; 
      #module.exports = solution;
    - Нажимаем на зелёную кнопку "Run"
  expected-result: |
    Пользователь должен видеть уведомление о победе

- summary: |
    Проверка поражения с игре с реальным человеком
  requirement: | 
    При поражении в игре с реальным человеком пользователь должен увидеть уведомление о поражении
  prerequisites:
    Пользователь зашёл в систему, открыта страница для решения задачи против реального человека.
  test-data: |
    empty
  steps:
    - Соперник должен ввести следующий код
      #const _ = require("lodash"); 
      #const R = require("rambda"); 
      #const solution = (width, length) => { return width * length; }; 
      #module.exports = solution;
    - Соперник нажимает на зелёную кнопку "Run" 
  expected-result: |
    Пользователь должен видеть уведомление о поражении

- summary: |
    Проверка создания игры с другом
  requirement: |
    Должна создаться игра с другом при выборе нужных параметров
  prerequisites:
    Пользователь зашёл в систему, открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Нажимаем кнопку «CREATE A GAME»
    - Выбираем уровень сложности
    - Нажимаем кнопку «With a friend»
    - Пишем в строке поиска никнейм друга, против которого будем играть
    - Устанавливаем время игры
    - Выбираем задание на игру "rect_area"
    - Нажимаем кнопку «Create a battle»
  expected-result: |
    Другу отправилось приглашение к игре против вас.

- summary: |
    Проверка присоединения к игре друга
  requirement: |
    При присоединении к игре друга должна начаться созданная ранее игра
  prerequisites:
    Пользователь зашёл в систему, открыта главная страница, на которой уже создана игра с другом. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Ждём, когда нашу игру примет друг
    - Друг принимает игру и перед нами открывается игровое окно для решения задачи
  expected-result: |
    Пользователь видит игровое окно для решения задачи против друга

- summary: |
    Проверка победы над другом
  requirement: |
    При вводе верного ответа на задание в игре против друга пользователь должен увидеть уведомление о победе
  prerequisites:
    Пользователь зашёл в систему, открыта страница для решения задачи против друга.
  test-data: |
    empty
  steps:
    - Выбираем язык "Node.js"
    - Решаем задачу раньше друга с помощью следующего кода
      #const _ = require("lodash"); 
      #const R = require("rambda"); 
      #const solution = (width, length) => { return width * length; }; 
      #module.exports = solution;
    - Нажимаем на зелёную кнопку "Run"
  expected-result: |
    Пользователь должен видеть уведомление о победе

- summary: |
    Проверка поражения с игре с другом
  requirement: | 
    При поражении в игре с другом пользователь должен увидеть уведомление о поражении
  prerequisites:
    Пользователь зашёл в систему, открыта страница для решения задачи против друга.
  test-data: |
    empty
  steps:
    - Друг должен ввести следующий код
      #const _ = require("lodash"); 
      #const R = require("rambda"); 
      #const solution = (width, length) => { return width * length; }; 
      #module.exports = solution;
    - Друг нажимает на зелёную кнопку "Run" 
  expected-result: |
    Пользователь должен видеть уведомление о поражении

- summary: |
    Проверка личного профиля
  requirement: |
    При переходе в личный профиль пользователь должен увидеть данные о проведённых играх
  prerequisites:
    Пользователь зашёл в систему, открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Нажимаем на икоку пользователя в верхнем правом углу
    - Нажимаем на "My Profile"
  expected-result: |
    Пользователь попадает на личную страницу на которой можно увидеть статистику проведённых игр

- summary: |
    Смена имени пользователя во вкладке "Settings"
  requirement: |
    При смене имени пользователь должен видеть новое имя на всех страницах приложения, где оно должно быть
  prerequisites:
    Пользователь зашёл в систему, открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Нажимаем на икоку пользователя в верхнем правом углу
    - Нажимаем на "Settings"
    - Меняем имя на любое другое доступное
    - Нажимаем кнопку «Save»
    - Видим уведомление "Your settings has been changed"
    - Выходим на главную страницу. https://codebattle.hexlet.io/#lobby
  expected-result: |
    В правом верхнем углу видим, что имя пользователя изменилось

- summary: |
    Смена языка программирования пользователя во вкладке "Settings"
  requirement: |
    При смене языка программирования в следующих играх должен быть по умолчанию выбран новый язык программирования
  prerequisites:
    Открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Нажимаем на икоку пользователя в верхнем правом углу
    - Нажимаем на "Settings"
    - Выбираем другой язык программирования для будущих игр, например Javascript
    - Нажимаем кнопку «Save»
    - Видим уведомление "Your settings has been changed"
    - Выходим на главную страницу. https://codebattle.hexlet.io/#lobby
    - Создаём любую игру против бота
  expected-result: |
    В созданной игре видим, что для решения задачи выбран язык Javascript и шаблон для решения задачи написан на Javascript

- summary: |
    Смена стиля звукового сопровождения игр во вкладке "Settings"
  requirement: |
    При смене настроек пользователя должны поменяться настройки пользователя
  prerequisites:
    Открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Нажимаем на икоку пользователя в верхнем правом углу
    - Нажимаем на "Settings"
    - Выбираем любой стиль звукового сопровождения игр
    - Нажимаем кнопку «Save»
    - Видим уведомление "Your settings has been changed"
    - Выходим на главную страницу. https://codebattle.hexlet.io/#lobby
    - Создаём любую игру против бота
    - Выигрываем или проигрываем игру, чтобы услышать соответствующий звук
  expected-result: |
    Пользователь слышит новое звуковое сопровождение игры

- summary: |
    Смена громкости звуков игры во вкладке "Settings"
  requirement: |
    При смене настроек пользователя должны поменяться настройки пользователя
  prerequisites:
    Открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Нажимаем на икоку пользователя в верхнем правом углу
    - Нажимаем на "Settings"
    - Устанавливаем громкость звуков игры
    - Нажимаем кнопку «Save»
    - Видим уведомление "Your settings has been changed"
    - Выходим на главную страницу. https://codebattle.hexlet.io/#lobby
    - Создаём любую игру против бота
    - Выигрываем или проигрываем игру, чтобы услышать звук
  expected-result: |
    Пользователь слышит, что громкость звукового сопровождения изменилась

- summary: |
    Проверка приложения на мобильном устройстве
  requirement: |
    При использовании приложения через мобильное устройство пользователь должен видеть корректную работу приложения и правильное отображение блоков
  prerequisites:
    Пользователь зашёл в систему, открыта страница авторизации через телефон. https://codebattle.hexlet.io/
  test-data: |
    empty
  steps:
    - Регистрируемся или входим по своим почте и паролю в приложение
    - Попадаем на главную страницу. https://codebattle.hexlet.io/#lobby
    - Нажимаем на "TOURNAMENTS", пролистываем элементы страницы
    - Нажимаем на "COMPLETED GAMES", пролистываем элементы страницы
    - Нажимаем на 3 полоски в верхнем правом углу и переходим в личный профиль, пролистываем страницу, видим информацию об аккаунте
    - Возвращаемся на главную страницу. https://codebattle.hexlet.io/#lobby
    - Создаём игру против бота по шаблону выше и выигрываем её
  expected-result: |
    Пользователь видит корректную работу приложения и правильное отображение блоков

- summary: |
    Проверка чата на главной страницу
  requirement: |
    У пользователя должна быть возможность общаться с другими людьми в приложении
  prerequisites:
    Пользователь зашёл в систему, открыта главная страница. https://codebattle.hexlet.io/#lobby
  test-data: |
    empty
  steps:
    - Пролистываем в самый низ страницы и видим общий час
    - Пишем любое сообщение в строке ввода текста и нажимаем на "Send"
  expected-result: |
    Пользователь отправил сообщение для общения с другими пользователями в общем чате приложения
